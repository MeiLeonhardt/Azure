# docker-k8s


Docker è un programma per la gestione dei container:
 1. è SSH e si gestisce da riga di comando, per questo si utilizzano altri container per la gestione dei   nostri container da GUI
![image](https://github.com/user-attachments/assets/2a55e945-fafd-4c46-8483-11ee5f9be2ef)

## Comandi docker
 ```
 docker -v 
 ```
 
 ```
 docker version 
 ```
 ```
#domando che mi restituisce tutti i container attivi sul mio sistema
docker ps

 ```
 ```
#cmd per rimuovere le immagini (es quando sono troppo pesanti)
docker remove <IMAGE_ID> ; <NAME_ID>

 ```

 ```
#comando per vedere tutte le immagini a cui ho fatto "pull" su docker
docker images

 ```
## Networks and subnets in docker
![image](https://github.com/user-attachments/assets/551d3d45-7364-405b-83e7-24a0b1b1a310)

In docker quando voglio permettere a due container di comunicare devono trovarsi nella stessa subnet; se così non fosse si utilizza il seguente comando per "costringere" uno dei due container ad essere nella stessa subnet.

![image](https://github.com/user-attachments/assets/9f40e821-e3f6-4ef1-87a9-16dcedec64cb)
I numeri di una sottorete variano sempre tra 0 e 255.
 
 ```
docker network connect
 ```
 ```
#se voglio creare una nuova network da utilizzare per i miei container
docker network create --subnet=192.168.1.0/24 my_custom_network
 ```
Avvia un container collegandolo alla rete appena creata. Puoi specificare un indirizzo IP statico se necessario. Ecco un esempio di come avviare un container (ad esempio, un container Nginx) sulla rete personalizzata:
 ```
docker run -d --name my_container --net my_custom_network --ip 192.168.1.10 nginx
 ```
 ```
#Collega il container alla rete desiderata. Supponiamo di avere un container chiamato container_a e di volerlo collegare a una rete chiamata my_custom_network. Puoi usare il seguente comando:
docker network connect my_custom_network container_a
 ```
### MySQL e MySQL Workbench
![image](https://github.com/user-attachments/assets/2b058781-2e46-49d3-b8ea-e9e01fd263c7)
In questo caso, ad esempio, per permettere a MySQL di comunicare con WOrkbench (il portale di gestione del database) devo inserire in workbench l'indirizzo IP del container MySQL.

## Portainer: container per la gestione di altri container
![image](https://github.com/user-attachments/assets/ee88da15-9817-43f7-8605-4eb59889f0c5)

 ```
#comando per scaricare un'immagine, ma devo verificare che sia compatibile con il mio processore
docker pull <nomeimmagine>
 ```

 ```
#su powershell inseririre il seguente script per la creazione del container portal-agent > creo una libreria portainer per la gestione dei container
docker run -d -p 9001:9001 --name portainer_agent --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes portainer/agent:2.16.2

 ```

 ```
#recupero IP del container su Admin:PS
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' portainer_agent

```

